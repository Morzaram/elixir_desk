---
import {
  ArticlesRecord,
  ArticlesResponse,
  AuthorsResponse,
  BaseSystemFields,
  Collections,
  ResourcesRecord,
  ResourcesResponse,
  TagsRecord,
  TagsResponse,
  VideosRecord,
  VideosResponse,
} from "../../../pocketbase-types";
import Card from "../../components/Card.astro";
import ResourceCard from "../../components/ResourceCard.svelte";

import ResourceFilter from "../../components/ResourceFilter.svelte";
import Layout from "../../layouts/Layout.astro";
import { authPb } from "pocketbase-vite-serverside";

const videos = await authPb
  .collection(Collections.Videos)
  .getFullList<
    VideosResponse<{ tags: TagsResponse[]; author: AuthorsResponse }>
  >(200, {
    sort: "-created",
    expand: "tags, author",
  });

const articles = await authPb
  .collection(Collections.Articles)
  .getFullList<
    ArticlesResponse<{ tags: TagsResponse[]; author: AuthorsResponse }>
  >(200, {
    sort: "-created",
    expand: "tags, author",
  });

const mediaList = [...articles, ...videos].sort((a, b) => {
  return Date.parse(b.created) - Date.parse(a.created);
});

const tags = await authPb
  .collection(Collections.Tags)
  .getFullList<TagsResponse>(200, {
    sort: "-created",
  });
---

<Layout title="Welcome to Astro.">
  <main>
    <h1><span class="text-gradient">Resources</span></h1>
    <p class="description">
      Here you will find a collection of videos and articles that have been made
      by the Elixir Community
    </p>

    <ResourceFilter client:load mediaList={mediaList} tags={tags} />
  </main>
</Layout>

<style>
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .description {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .description code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
